name: Repo Factory

on:
  workflow_dispatch:
    inputs:
      owner:
        description: "Destination owner (leave blank to use current account/org)"
        required: false
        type: string
      name:
        description: "New repo name"
        required: true
        type: string
      private:
        description: "Create as private repo?"
        required: true
        default: true
        type: boolean
      description:
        description: "Repository description"
        required: false
        type: string
      template_owner:
        description: "Template owner (optional; with template_repo)"
        required: false
        type: string
      template_repo:
        description: "Template repo (optional; with template_owner)"
        required: false
        type: string

permissions:
  contents: write
  actions: write
  issues: write
  pull-requests: write

jobs:
  create-and-seed:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      GH_TOKEN: ${{ secrets.REPO_MILK_BOX_FACTORY_ADMIN }}

    steps:
      - name: Checkout (context only)
        uses: actions/checkout@v4

      - name: Validate token exists
        run: |
          if [ -z "${GH_TOKEN:-}" ]; then
            echo "::error title=Missing token::REPO_MILK_BOX_FACTORY_ADMIN is not set"
            exit 1
          fi
          echo "Token present (masked)."

      - name: Normalize inputs
        id: prep
        run: |
          OWNER="${{ inputs.owner }}"
          NAME="${{ inputs.name }}"
          PRIV="${{ inputs.private }}"
          DESC="${{ inputs.description }}"
          T_OWNER="${{ inputs.template_owner }}"
          T_REPO="${{ inputs.template_repo }}"

          if [ -z "$OWNER" ]; then OWNER="${{ github.repository_owner }}"; fi
          if [ -z "$NAME" ]; then
            echo "::error title=Missing name::You must provide inputs.name"
            exit 1
          fi

          VISIBILITY="public"
          if [ "$PRIV" = "true" ] || [ "$PRIV" = "True" ]; then VISIBILITY="private"; fi

          echo "owner=$OWNER" >> $GITHUB_OUTPUT
          echo "name=$NAME" >> $GITHUB_OUTPUT
          echo "visibility=$VISIBILITY" >> $GITHUB_OUTPUT
          echo "desc=$DESC" >> $GITHUB_OUTPUT
          echo "t_owner=$T_OWNER" >> $GITHUB_OUTPUT
          echo "t_repo=$T_REPO" >> $GITHUB_OUTPUT

      - name: Create repository
        id: create
        run: |
          OWNER=${{ steps.prep.outputs.owner }}
          NAME=${{ steps.prep.outputs.name }}
          VIS=${{ steps.prep.outputs.visibility }}
          DESC=${{ steps.prep.outputs.desc }}
          T_OWNER=${{ steps.prep.outputs.t_owner }}
          T_REPO=${{ steps.prep.outputs.t_repo }}

          if [ -n "$T_OWNER" ] && [ -n "$T_REPO" ]; then
            gh api --method POST -H "Accept: application/vnd.github+json" \
              /repos/$T_OWNER/$T_REPO/generate \
              -f owner="$OWNER" -f name="$NAME" \
              -f private=$([ "$VIS" = "private" ] && echo true || echo false) \
              -F "description=$DESC" >/dev/null
          else
            if [ "$VIS" = "private" ]; then PRIV_FLAG="--private"; else PRIV_FLAG="--public"; fi
            gh repo create "$OWNER/$NAME" $PRIV_FLAG --confirm
            if [ -n "$DESC" ]; then
              gh api -X PATCH -H "Accept: application/vnd.github+json" "/repos/$OWNER/$NAME" -f description="$DESC"
            fi
          fi
          echo "url=https://github.com/$OWNER/$NAME" >> $GITHUB_OUTPUT

      - name: Seed workflows, labels, protection
        run: |
          OWNER=${{ steps.prep.outputs.owner }}
          NAME=${{ steps.prep.outputs.name }}
          bash .github/workflows/scripts/seed.sh "$OWNER" "$NAME"

      - name: Summary
        run: echo "Repo created â†’ ${{ steps.create.outputs.url }}" >> $GITHUB_STEP_SUMMARY
